{
	// Place your codechef workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"start1": {
		"scope": "cpp",
		"prefix": "start1",
		"body": [
		"#include<bits/stdc++.h>",
		"using namespace std;",
		"int main()",
		"{",
		"    ",
		"    return 0;",
		"}"
		],
	},
	"start": {
		"scope": "cpp",
		"prefix": "start",
		"body": [
		"#include<iostream>",
		"using namespace std;",
		"int main()",
		"{",
		"    ",
		"    return 0;",
		"}"
		],
	},
	"testcase":{
		"scope": "cpp",
		"prefix": "testcase",
		"body": [
			"int testcase;",
			"cin>>testcase;",
			"while(testcase--)",
			"{",
			"    ",
		    "}"

		],
	},
	"for loop":{
		"scope":"cpp",
		"prefix": "loop1",
		"body": [
			"for(int i=0;i<n;i++)",
			"{",
			"     ",
			"}"
		],
	},
	"double for loop":{
		"scope":"cpp",
		"prefix": "loop2",
		"body": [
			"for(int i=0;i<n;i++)",
			"{",
			 "    for(int j=0;j<n;j++)",
			 "    {",
			 "        ",
			 "    }",
			"}"
		],
	},
	"Advance cpp library":{
		"scope":"cpp",
		"prefix": "Advance cpp library",
		"body": [
			"#include <boost/multiprecision/cpp_int.hpp>",
			"using namespace boost::multiprecision;"
		],
	},
	"headerfile list":{
		"scope":"cpp",
		"prefix": "#include <list>",
		"body": [
			"#include <list>",
		],
	},
	"headerfile vector":{
		"scope":"cpp",
		"prefix": "#include <vector>",
		"body": [
			"#include <vector>",
		],
	},
	"headerfile map":{
		"scope":"cpp",
		"prefix": "#include <map>",
		"body": [
			"#include <map>",
		],
	},
	"headerfile stack":{
		"scope":"cpp",
		"prefix": "#include <stack>",
		"body": [
			"#include <stack>",
		],
	}
	,
	"headerfile queue":{
		"scope":"cpp",
		"prefix": "#include <queue>",
		"body": [
			"#include <queue>",
		],
	}
	
	// "input from file":{
	// 	"scope":"cpp",
	// 	"prefix": "input",
	// 	"body": [
	// 		"#ifndef ONLINE_JUDGE"
	//		 "freopen("input.txt", "r", stdin);"
	// 		"freopen("output.txt", "w", stdout);"
	// 		"#endif"
	// 	],
	// }
}





    
    
    